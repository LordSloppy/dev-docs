components:
  schemas:
    Model:
      properties:
        id:
          type: number
        createdAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        updatedAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
      type: object
    DomainsResolution:
      properties:
        ownerAddress:
          pattern: ^0x[a-fA-F0-9]{40}$
          type: string
        resolver:
          not:
            type: string
            enum:
              - '0x0000000000000000000000000000000000000000'
          pattern: ^0x[a-fA-F0-9]{40}$
          type: string
        registry: {}
        resolution:
          $ref: '#/components/schemas/Object'
          type: object
        blockchain:
          enum:
            - ETH
            - ZIL
            - MATIC
          type: string
        id:
          type: number
        createdAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        updatedAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
      type: object
      required:
        - blockchain
    WorkerStatus:
      properties:
        location:
          enum:
            - ETH
            - ZIL
            - MATIC
          type: string
        lastMirroredBlockNumber:
          minimum: 0
          type: number
        lastMirroredBlockHash: {}
        lastAtxuid:
          type: number
        id:
          type: number
        createdAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        updatedAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
      type: object
      required:
        - location
        - lastMirroredBlockNumber
    CnsRegistryEvent:
      properties:
        type:
          enum:
            - Transfer
            - Resolve
            - NewURI
            - Sync
            - Set
            - ResetRecords
            - Approval
            - ApprovalForAll
            - NewURIPrefix
            - Upgraded
            - AdminChanged
          type: string
        blockchain:
          type: string
        networkId:
          type: number
        blockNumber:
          $ref: '#/components/schemas/Object'
          type: number
        blockHash:
          pattern: 0x[0-9a-f]+
          type: string
        logIndex:
          $ref: '#/components/schemas/Object'
          minimum: 0
          type: number
        transactionHash:
          $ref: '#/components/schemas/Object'
          pattern: 0x[0-9a-f]+
          type: string
        returnValues:
          type: object
        node:
          pattern: 0x[0-9a-f]+
          type: string
        id:
          type: number
        createdAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        updatedAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
      type: object
      required:
        - type
        - blockchain
        - networkId
        - blockNumber
        - returnValues
    Domain:
      properties:
        name:
          type: string
        node:
          pattern: ^0x[a-f0-9]{64}$
          type: string
        parent: {}
        id:
          type: number
        createdAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        updatedAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
      type: object
      required:
        - name
        - node
    ZnsTransaction:
      properties:
        atxuid:
          $ref: '#/components/schemas/Object'
          minimum: 0
          type: number
        hash:
          pattern: ^0x[0-9a-f]{64}$
          type: string
        blockNumber:
          $ref: '#/components/schemas/Object'
          minimum: 165700
          type: integer
        id:
          type: number
        createdAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        updatedAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
      type: object
      required:
        - blockNumber
    ApiKey:
      properties:
        name:
          type: string
        apiKey:
          format: uuid
          type: string
        id:
          type: number
        createdAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
        updatedAt:
          oneOf:
            - format: date
              type: string
            - format: date-time
              type: string
      type: object
      required:
        - name
        - apiKey
    DomainMetadata:
      properties:
        domain:
          type: string
        owner:
          type: string
        resolver:
          type: string
        blockchain:
          items:
            type: string
            enum:
              - ETH
              - ZIL
              - MATIC
          type: string
        networkId:
          type: number
          enum:
            - 1
            - 4
            - 137
            - 1337
            - 80001
        registry:
          type: string
      type: object
      required:
        - domain
    DomainResponse:
      properties:
        meta:
          $ref: '#/components/schemas/DomainMetadata'
        records:
          type: object
      type: object
      required:
        - meta
        - records
    DomainsListQuery:
      properties:
        owners:
          items:
            minLength: 1
            type: string
          type: array
          minItems: 1
        tlds:
          $ref: '#/components/schemas/Object'
          items:
            type: string
          type: array
        sortBy:
          type: string
          enum:
            - id
            - name
        sortDirection:
          type: string
          enum:
            - ASC
            - DESC
        perPage:
          maximum: 200
          type: integer
          minimum: 1
        startingAfter: {}
      type: object
      required:
        - owners
    DomainAttributes:
      properties:
        id:
          type: string
        attributes:
          $ref: '#/components/schemas/DomainResponse'
      type: object
      required:
        - id
        - attributes
    DomainsListMeta:
      properties:
        nextStartingAfter:
          type: string
          minLength: 1
        sortBy:
          type: string
          minLength: 1
        sortDirection:
          type: string
          minLength: 1
        perPage:
          maximum: 200
          type: string
          minimum: 1
          minLength: 1
        hasMore:
          type: string
          minLength: 1
      type: object
      required:
        - nextStartingAfter
        - sortBy
        - sortDirection
        - perPage
        - hasMore
    BlockchainStatus:
      properties:
        isUpToDate:
          type: boolean
        latestNetworkBlock:
          type: number
        latestMirroredBlock:
          type: number
        networkId:
          type: number
        acceptableDelayInBlocks:
          type: number
      type: object
      required:
        - isUpToDate
        - latestNetworkBlock
        - latestMirroredBlock
        - networkId
        - acceptableDelayInBlocks
    Blockchains:
      properties:
        ETH:
          $ref: '#/components/schemas/BlockchainStatus'
        MATIC:
          $ref: '#/components/schemas/BlockchainStatus'
        ZIL:
          $ref: '#/components/schemas/BlockchainStatus'
      type: object
      required:
        - ETH
        - MATIC
        - ZIL
    StatusResponse:
      properties:
        blockchain:
          $ref: '#/components/schemas/Blockchains'
      type: object
      required:
        - blockchain
    Erc721Metadata:
      properties:
        name:
          type: string
        description:
          type: string
        image:
          type: string
        external_url:
          type: string
      type: object
      required:
        - name
        - description
        - image
        - external_url
    OpenSeaMetadata:
      properties:
        external_link:
          type: string
        image_data:
          type: string
        properties:
          type: object
        attributes:
          items: {}
          type: array
        background_color:
          type: string
        animation_url:
          type: string
        youtube_url:
          type: string
        name:
          type: string
        description:
          type: string
        image:
          type: string
        external_url:
          type: string
      type: object
      required:
        - properties
        - attributes
        - name
        - description
        - image
        - external_url
    ImageResponse:
      properties:
        image_data:
          type: string
      type: object
      required:
        - image_data
  securitySchemes:
    apiKeyAuth:
      scheme: bearer
      type: http
info:
  title: ''
  version: 1.0.0
openapi: 3.0.0
paths:
  /domains/{domainName}:
    get:
      operationId: DomainsController.getDomain
      parameters:
        - in: path
          name: domainName
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainResponse'
          description: ''
      summary: Get domain
      tags:
        - Domains
      security:
        - apiKeyAuth: []
  /domains:
    get:
      operationId: DomainsController.getDomainsList
      parameters:
        - in: query
          name: owners
          required: true
          schema:
            items:
              minLength: 1
              type: string
            type: array
            minItems: 1
        - in: query
          name: tlds
          required: false
          schema:
            $ref: '#/components/schemas/Object'
            items:
              type: string
            type: array
        - in: query
          name: sortBy
          required: false
          schema:
            type: string
            enum:
              - id
              - name
        - in: query
          name: sortDirection
          required: false
          schema:
            type: string
            enum:
              - ASC
              - DESC
        - in: query
          name: perPage
          required: false
          schema:
            maximum: 200
            type: integer
            minimum: 1
        - in: query
          name: startingAfter
          required: false
          schema: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/DomainAttributes'
          description: Successful response
      summary: Get domains list
      tags:
        - Domains
      security:
        - apiKeyAuth: []
  /status:
    get:
      operationId: StatusController.getStatus
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: ''
      summary: Get status
      tags:
        - Status
  /liveness_check:
    get:
      operationId: StatusController.livenessCheck
      responses:
        '200':
          content:
            application/json: {}
          description: Successful response
      summary: Liveness check
      tags:
        - Status
  /readiness_check:
    get:
      operationId: StatusController.readinessCheck
      responses:
        '200':
          content:
            application/json: {}
          description: Successful response
      summary: Readiness check
      tags:
        - Status
  /deaddata/{domainOrToken}:
    get:
      operationId: MetaDataController.getDeadData
      parameters:
        - in: path
          name: domainOrToken
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OpenSeaMetadata'
          description: ''
      summary: Get dead data
      tags:
        - Meta Data
  /metadata/{domainOrToken}:
    get:
      operationId: MetaDataController.getMetaData
      parameters:
        - in: path
          name: domainOrToken
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/OpenSeaMetadata'
          description: ''
      summary: Get meta data
      tags:
        - Meta Data
  /image/{domainOrToken}:
    get:
      operationId: MetaDataController.getImage
      parameters:
        - in: path
          name: domainOrToken
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            text/html; charset=utf-8:
              schema:
                $ref: '#/components/schemas/ImageResponse'
          description: ''
      summary: Get image
      tags:
        - Meta Data
  /image-src/{domainOrToken}:
    get:
      operationId: MetaDataController.getImageSrc
      parameters:
        - in: path
          name: domainOrToken
          required: true
          schema:
            type: string
      responses:
        '200':
          content:
            text/html; charset=utf-8: {}
          description: Successful response
      summary: Get image src
      tags:
        - Meta Data
